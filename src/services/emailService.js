// src/services/emailService.js
const nodemailer = require('nodemailer');
require('dotenv').config();

// Check if SMTP is configured
const isSmtpConfigured = process.env.SMTP_HOST && process.env.SMTP_USER && process.env.SMTP_PASS;

let transporter;

if (isSmtpConfigured) {
    transporter = nodemailer.createTransporter({
        host: process.env.SMTP_HOST,
        port: parseInt(process.env.SMTP_PORT, 10),
        secure: process.env.SMTP_SECURE === 'true',
        auth: {
            user: process.env.SMTP_USER,
            pass: process.env.SMTP_PASS,
        },
    });

    transporter.verify(function(error, success) {
        if (error) {
            console.error("‚ö†Ô∏è  SMTP configuration error:", error.message);
            console.log("üìß Email functionality will be disabled");
        } else {
            console.log("‚úÖ SMTP transporter configured successfully");
        }
    });
} else {
    console.log("üìß SMTP not configured - email functionality disabled");
    transporter = null;
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
 */
async function sendSupportEmail(userEmail, subject, message) {
    if (!transporter) {
        console.log("üìß Email not sent - SMTP not configured");
        // Return success to not break the application flow
        return { messageId: 'mock-message-id', info: 'SMTP not configured' };
    }

    const mailOptions = {
        from: `"${process.env.APP_NAME || 'Hockey GM Support'}" <${process.env.SMTP_FROM_EMAIL}>`,
        to: process.env.SUPPORT_EMAIL_TO,
        replyTo: userEmail,
        subject: `[Support Ticket] ${subject} (from ${userEmail})`,
        text: `–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userEmail}\n\n–¢–µ–º–∞: ${subject}\n\n–°–æ–æ–±—â–µ–Ω–∏–µ:\n${message}`,
        html: `
            <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</strong> ${userEmail}</p>
            <p><strong>–¢–µ–º–∞:</strong> ${subject}</p>
            <hr>
            <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong></p>
            <p>${message.replace(/\n/g, '<br>')}</p>
            <hr>
            <p><em>–≠—Ç–æ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ —Ñ–æ—Ä–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ${process.env.APP_NAME || 'Hockey GM'}.</em></p>
        `,
    };

    try {
        const info = await transporter.sendMail(mailOptions);
        console.log('‚úÖ Support email sent successfully: %s', info.messageId);
        return info;
    } catch (error) {
        console.error('‚ùå Error sending support email:', error);
        throw error;
    }
}

module.exports = {
    sendSupportEmail,
};